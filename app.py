import os, threading
from flask import Flask
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters

TOKEN = os.getenv("TELEGRAM_TOKEN")
if not TOKEN:
    raise RuntimeError("TELEGRAM_TOKEN is not set")

app = Flask(__name__)

# --- Telegram bot handlers ---
def start(update, context):
    update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –£—á–ë–æ—Ç–∏–∫ ü§ñ –ù–∞–ø–∏—à–∏ —Ç–µ–º—É –∏–ª–∏ –ø—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ –∑–∞–¥–∞—á–∏.")

def handle_text(update, context):
    update.message.reply_text("–ü—Ä–∏–Ω—è–ª! –°–∫–æ—Ä–æ –Ω–∞—É—á—É—Å—å –æ–±—ä—è—Å–Ω—è—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ ‚úçÔ∏è")

def run_bot():
    updater = Updater(TOKEN)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_text))
    updater.start_polling()
    updater.idle()

# --- Web health endpoint for Render ---
@app.get("/")
def health():
    return "ok", 200

# –ó–∞–ø—É—Å–∫–∞–µ–º Telegram-–±–æ—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
bot_thread_started = False
@app.before_first_request
def start_bot_thread():
    global bot_thread_started
    if not bot_thread_started:
        threading.Thread(target=run_bot, daemon=True).start()
        bot_thread_started = True

# –õ–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –Ω–∞ Render)
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.getenv("PORT", 10000)))
