import os
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from aiohttp import web

TOKEN = os.getenv("TELEGRAM_TOKEN")
if not TOKEN:
    raise RuntimeError("TELEGRAM_TOKEN is not set")

PORT = int(os.getenv("PORT", "10000"))
# Render —Å–∞–º –≤—ã—Å—Ç–∞–≤–ª—è–µ—Ç —ç—Ç—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å —Ç–≤–æ–∏–º –ø—É–±–ª–∏—á–Ω—ã–º URL (–Ω–∞–ø—Ä–∏–º–µ—Ä https://uchbotik.onrender.com)
PUBLIC_URL = os.getenv("RENDER_EXTERNAL_URL")
if not PUBLIC_URL:
    # –µ—Å–ª–∏ –≤–¥—Ä—É–≥ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–µ—Ç, –º–æ–∂–Ω–æ –∑–∞—Ö–∞—Ä–¥–∫–æ–¥–∏—Ç—å —Å–≤–æ–π URL:
    # PUBLIC_URL = "https://uchbotik.onrender.com"
    raise RuntimeError("RENDER_EXTERNAL_URL is not set")

# ---------- handlers ----------
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –£—á–ë–æ—Ç–∏–∫ ü§ñ –ü—Ä–∏—à–ª–∏ —Ç–µ–∫—Å—Ç –∏–ª–∏ —Ñ–æ—Ç–æ –∑–∞–¥–∞—á–∏.")

async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–Ω—è–ª —Ç–µ–∫—Å—Ç ‚úÖ. –°–∫–æ—Ä–æ –±—É–¥–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–π —Ä–∞–∑–±–æ—Ä!")

async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–§–æ—Ç–æ –ø–æ–ª—É—á–∏–ª ‚úÖ. –ê–Ω–∞–ª–∏–∑ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –¥–æ–±–∞–≤–∏–º –ø–æ–∑–∂–µ.")

async def main():
    application = ApplicationBuilder().token(TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.PHOTO, handle_photo))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))

    # ---------- aiohttp-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –≤–µ–±—Ö—É–∫–∞ + health ----------
    web_app = web.Application()

    # health-check –¥–ª—è Render (HEAD/GET –Ω–∞ "/")
    async def health(request: web.Request):
        return web.Response(text="ok")
    web_app.router.add_get("/", health)
    web_app.router.add_head("/", health)

    # –ü—É—Å—Ç—å –≤–µ–±—Ö—É–∫ —Ö–æ–¥–∏—Ç –Ω–∞ https://<—Ç–≤–æ–π-–¥–æ–º–µ–Ω>/<—Ç–æ–∫–µ–Ω>
    webhook_path = f"/{TOKEN}"
    webhook_url = f"{PUBLIC_URL}{webhook_path}"

    # 1) —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤–µ–±—Ö—É–∫ –≤ Telegram
    await application.bot.set_webhook(url=webhook_url)

    # 2) –∑–∞–ø—É—Å–∫–∞–µ–º webhook-—Å–µ—Ä–≤–µ—Ä (PTB —Å–∞–º –ø—Ä–∏–Ω–∏–º–∞–µ—Ç POST –æ—Ç Telegram)
    await application.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        url_path=TOKEN,      # —Ç–æ—Ç –∂–µ –ø—É—Ç—å, —á—Ç–æ –∏ –≤ webhook_url
        webhook_url=webhook_url,
        web_app=web_app,     # –¥–∞—ë–º –Ω–∞—à aiohttp app (—Ç–∞–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ "/" –¥–ª—è Render)
        drop_pending_updates=True
    )

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
